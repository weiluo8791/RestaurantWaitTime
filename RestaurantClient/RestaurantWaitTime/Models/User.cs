// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace RestaurantClient.Models
{
    public partial class User
    {
        private string _email;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Email
        {
            get { return this._email; }
            set { this._email = value; }
        }
        
        private string _idpId;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string IdpId
        {
            get { return this._idpId; }
            set { this._idpId = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        private string _type;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Type
        {
            get { return this._type; }
            set { this._type = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the User class.
        /// </summary>
        public User()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the User class with required
        /// arguments.
        /// </summary>
        public User(string idpId, string name, string type)
            : this()
        {
            if (idpId == null)
            {
                throw new ArgumentNullException("idpId");
            }
            if (name == null)
            {
                throw new ArgumentNullException("name");
            }
            if (type == null)
            {
                throw new ArgumentNullException("type");
            }
            this.IdpId = idpId;
            this.Name = name;
            this.Type = type;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken emailValue = inputObject["Email"];
                if (emailValue != null && emailValue.Type != JTokenType.Null)
                {
                    this.Email = ((string)emailValue);
                }
                JToken idpIdValue = inputObject["IdpId"];
                if (idpIdValue != null && idpIdValue.Type != JTokenType.Null)
                {
                    this.IdpId = ((string)idpIdValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
                JToken typeValue = inputObject["Type"];
                if (typeValue != null && typeValue.Type != JTokenType.Null)
                {
                    this.Type = ((string)typeValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type User
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.IdpId == null)
            {
                throw new ArgumentNullException("IdpId");
            }
            if (this.Name == null)
            {
                throw new ArgumentNullException("Name");
            }
            if (this.Type == null)
            {
                throw new ArgumentNullException("Type");
            }
            if (this.Email != null)
            {
                outputObject["Email"] = this.Email;
            }
            if (this.IdpId != null)
            {
                outputObject["IdpId"] = this.IdpId;
            }
            if (this.Name != null)
            {
                outputObject["Name"] = this.Name;
            }
            if (this.Type != null)
            {
                outputObject["Type"] = this.Type;
            }
            return outputObject;
        }
    }
}
