// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using RestaurantClient.Models;

namespace RestaurantClient
{
    public partial interface IRestaurants
    {
        /// <param name='restaurantId'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Restaurant>> DeleteRestaurantByRestaurantidWithOperationResponseAsync(string restaurantId, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<IList<string>>> GetAllRestaurantsWithOperationResponseAsync(CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='restaurantId'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Restaurant>> GetRestaurantByRestaurantidWithOperationResponseAsync(string restaurantId, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='item'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<Restaurant>> PostRestaurantByItemWithOperationResponseAsync(Restaurant item, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='restaurantId'>
        /// Required.
        /// </param>
        /// <param name='patch'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<object>> UpdateRestaurantByRestaurantidAndPatchWithOperationResponseAsync(string restaurantId, string patch, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
