// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using UserClient.Models;

namespace UserClient
{
    public partial interface IWaitTimes
    {
        /// <param name='restaurantId'>
        /// Required.
        /// </param>
        /// <param name='group'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<WaitTime>> DeleteCurrentWaitTimeByRestaurantidAndGroupWithOperationResponseAsync(string restaurantId, int group, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='restaurantId'>
        /// Required.
        /// </param>
        /// <param name='group'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<WaitTime>> GetLatestRestaurantWaitTimeByGroupByRestaurantidAndGroupWithOperationResponseAsync(string restaurantId, int group, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='restaurantId'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<WaitTime>> GetLatestRestaurantWaitTimeByRestaurantidWithOperationResponseAsync(string restaurantId, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        
        /// <param name='item'>
        /// Required.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        Task<HttpOperationResponse<WaitTime>> PostWaitTimeByItemWithOperationResponseAsync(WaitTime item, CancellationToken cancellationToken = default(System.Threading.CancellationToken));
    }
}
